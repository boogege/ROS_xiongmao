<launch>
  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, roomba -->
  <arg name="battery"    default="$(optenv TURTLEBOT_BATTERY /sys/class/power_supply/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 in 2.6 or earlier kernels-->
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->
  <arg name="simulation" default="$(optenv TURTLEBOT_SIMULATION false)"/>
  <arg name="serialport" default="$(optenv TURTLEBOT_SERIAL_PORT /dev/3womin)"/> <!-- /dev/ttyUSB0, /dev/ttyS0 -->

  <param name="/use_sim_time" value="$(arg simulation)"/>
  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="serialport" value="$(arg serialport)" />
  </include>
<!--
  <include file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
    <arg name="battery" value="$(arg battery)" />
  </include>
-->

  <node name="hokuyo_node" pkg="hokuyo_node" type="hokuyo_node">
    <param name="frame_id" value="laser_link" />
    <param name="min_ang" value="-1.0" />
    <param name="max_ang" value="1." />
  </node>

<!--
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/rplidar"/>  
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="laser_link"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>
-->
<!--
  <node name="laser_filter"  pkg="laser_data"  type="laser_filter" output="screen"/>
-->
<node name="laser_filter"  pkg="laser_data"  type="laser_filter" />

  <!-- Map server And Navigation -->
  <arg name="map_file" default="/home/ubuntu/mapsaved/rearealmap_red.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  <arg name="initial_pose_x" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_y" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(find turtlebot_navigation)/launch/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>

  <include file="$(find turtlebot_teleop)/launch/includes/velocity_smoother.launch.xml"/> 




<!--
  The turtlebot people (or whatever) follower nodelet.   
 -->
  <include file="$(find turtlebot_follower)/launch/includes/velocity_smoother.launch.xml"/>
  <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="rgb_processing"                  value="true"/>  <!-- only required if we use android client -->
    <arg name="depth_processing"                value="true"/>
    <arg name="depth_registered_processing"     value="false"/>
    <arg name="depth_registration"              value="false"/>
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
    <arg name="scan_processing"                 value="false"/>
  </include>

  <!-- Make a slower camera feed available; only required if we use android client -->
  <node pkg="topic_tools" type="throttle" name="camera_throttle"
        args="messages camera/rgb/image_color/compressed 5"/>

  <!--  Load turtlebot follower into the 3d sensors nodelet manager to avoid pointcloud serializing -->
  <node pkg="nodelet" type="nodelet" name="turtlebot_follower"
        args="load turtlebot_follower/TurtlebotFollower camera/camera_nodelet_manager">
    <remap from="turtlebot_follower/cmd_vel" to="follower_velocity_smoother/raw_cmd_vel"/>
    <remap from="depth/points" to="camera/depth/points"/>
    <param name="enabled" value="false" />
    <param name="x_scale" value="4.0" />
    <param name="z_scale" value="1.5" />
    <param name="min_x" value="-0.35" />
    <param name="max_x" value="0.35" />
    <param name="min_y" value="0.1" />
    <param name="max_y" value="0.5" />
    <param name="max_z" value="1.2" />
    <param name="goal_z" value="0.6" />
  </node>
  <!-- Sandalone launching: useful for testing 
  <node pkg="nodelet" type="nodelet" name="turtlebot_follower_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="turtlebot_follower" args="load turtlebot_follower/TurtlebotFollower turtlebot_follower_manager"> -->


<!-- rviz -->
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_rviz_launchers)/rviz/omni_navigation.rviz"/>  

</launch>
